
out.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000077e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000072a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000077e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000007b0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000068  00000000  00000000  000007f0  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001191  00000000  00000000  00000858  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000827  00000000  00000000  000019e9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000068f  00000000  00000000  00002210  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000058  00000000  00000000  000028a0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000770  00000000  00000000  000028f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000003be  00000000  00000000  00003068  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  00003426  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <main>
  78:	0c 94 93 03 	jmp	0x726	; 0x726 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <_ZN6System5startEv>:
	int8_t address = 1;
	
	// Timer since the module has be started!
	int bootTimer = 0;
	
	public: void start() {
  80:	cf 93       	push	r28
  82:	df 93       	push	r29
  84:	cd b7       	in	r28, 0x3d	; 61
  86:	de b7       	in	r29, 0x3e	; 62
  88:	ce 50       	subi	r28, 0x0E	; 14
  8a:	d2 40       	sbci	r29, 0x02	; 2
  8c:	0f b6       	in	r0, 0x3f	; 63
  8e:	f8 94       	cli
  90:	de bf       	out	0x3e, r29	; 62
  92:	0f be       	out	0x3f, r0	; 63
  94:	cd bf       	out	0x3d, r28	; 61
  96:	8c 01       	movw	r16, r24
		
		DDRD = 0xFF;
  98:	8f ef       	ldi	r24, 0xFF	; 255
  9a:	8a b9       	out	0x0a, r24	; 10
		DDRB = 0xFF;
  9c:	84 b9       	out	0x04, r24	; 4
	bool hasHandledClckPulse;
	int8_t handleTimer;
	
	bool enableListening;
	
	public: ICOM () {
  9e:	fe 01       	movw	r30, r28
  a0:	32 96       	adiw	r30, 0x02	; 2
  a2:	df 01       	movw	r26, r30
  a4:	28 2f       	mov	r18, r24
  a6:	1d 92       	st	X+, r1
  a8:	2a 95       	dec	r18
  aa:	e9 f7       	brne	.-6      	; 0xa6 <_ZN6System5startEv+0x26>
  ac:	eb 5f       	subi	r30, 0xFB	; 251
  ae:	fe 4f       	sbci	r31, 0xFE	; 254
  b0:	df 01       	movw	r26, r30
  b2:	1d 92       	st	X+, r1
  b4:	8a 95       	dec	r24
  b6:	e9 f7       	brne	.-6      	; 0xb2 <_ZN6System5startEv+0x32>
		}
		
	}
	
	public: void reset() {
		doRead = false;
  b8:	19 82       	std	Y+1, r1	; 0x01
		recivedData[255] = {0};
		recivedDataLength = 0;
		remainingRecivePackets = 0;
  ba:	ce 5f       	subi	r28, 0xFE	; 254
  bc:	de 4f       	sbci	r29, 0xFE	; 254
  be:	18 82       	st	Y, r1
  c0:	c2 50       	subi	r28, 0x02	; 2
  c2:	d1 40       	sbci	r29, 0x01	; 1
		byteBuffer = 0;
  c4:	cd 5f       	subi	r28, 0xFD	; 253
  c6:	de 4f       	sbci	r29, 0xFE	; 254
  c8:	18 82       	st	Y, r1
  ca:	c3 50       	subi	r28, 0x03	; 3
  cc:	d1 40       	sbci	r29, 0x01	; 1
		byteBufferPointer = 0;
  ce:	cc 5f       	subi	r28, 0xFC	; 252
  d0:	de 4f       	sbci	r29, 0xFE	; 254
  d2:	18 82       	st	Y, r1
  d4:	c4 50       	subi	r28, 0x04	; 4
  d6:	d1 40       	sbci	r29, 0x01	; 1
		
		requestSend = false;
  d8:	cb 5f       	subi	r28, 0xFB	; 251
  da:	de 4f       	sbci	r29, 0xFE	; 254
  dc:	18 82       	st	Y, r1
  de:	c5 50       	subi	r28, 0x05	; 5
  e0:	d1 40       	sbci	r29, 0x01	; 1
		
		doSend = false;
  e2:	ca 5f       	subi	r28, 0xFA	; 250
  e4:	de 4f       	sbci	r29, 0xFE	; 254
  e6:	18 82       	st	Y, r1
  e8:	c6 50       	subi	r28, 0x06	; 6
  ea:	d1 40       	sbci	r29, 0x01	; 1
		sendData[255] = {0};
		sendDataLength = 0;
		remainingSendPackets = 0;
  ec:	c9 5f       	subi	r28, 0xF9	; 249
  ee:	dd 4f       	sbci	r29, 0xFD	; 253
  f0:	18 82       	st	Y, r1
  f2:	c7 50       	subi	r28, 0x07	; 7
  f4:	d2 40       	sbci	r29, 0x02	; 2
		byteBuffer2 = 0;
  f6:	c8 5f       	subi	r28, 0xF8	; 248
  f8:	dd 4f       	sbci	r29, 0xFD	; 253
  fa:	18 82       	st	Y, r1
  fc:	c8 50       	subi	r28, 0x08	; 8
  fe:	d2 40       	sbci	r29, 0x02	; 2
		byteBufferPointer2 = 8;
 100:	88 e0       	ldi	r24, 0x08	; 8
 102:	c7 5f       	subi	r28, 0xF7	; 247
 104:	dd 4f       	sbci	r29, 0xFD	; 253
 106:	88 83       	st	Y, r24
 108:	c9 50       	subi	r28, 0x09	; 9
 10a:	d2 40       	sbci	r29, 0x02	; 2
	
	public: ICOM () {
		
		reset();
		
		hasHandledClckPulse = false;
 10c:	c6 5f       	subi	r28, 0xF6	; 246
 10e:	dd 4f       	sbci	r29, 0xFD	; 253
 110:	18 82       	st	Y, r1
 112:	ca 50       	subi	r28, 0x0A	; 10
 114:	d2 40       	sbci	r29, 0x02	; 2
		handleTimer = 0;
		enableListening = false;
 116:	c4 5f       	subi	r28, 0xF4	; 244
 118:	dd 4f       	sbci	r29, 0xFD	; 253
 11a:	18 82       	st	Y, r1
 11c:	cc 50       	subi	r28, 0x0C	; 12
 11e:	d2 40       	sbci	r29, 0x02	; 2
		
		DDRC = PORTC_COM_1 | PORTC_COM_2;
 120:	83 e0       	ldi	r24, 0x03	; 3
 122:	87 b9       	out	0x07, r24	; 7
		eeprom_update_byte((uint8_t *) 0x0, data);
		loadAdress();
	}
	
	public: void loadAdress() {
		uint8_t data = eeprom_read_byte((uint8_t *) 0x0);
 124:	80 e0       	ldi	r24, 0x00	; 0
 126:	90 e0       	ldi	r25, 0x00	; 0
 128:	0e 94 79 03 	call	0x6f2	; 0x6f2 <eeprom_read_byte>
		address = (int8_t) data;
 12c:	f8 01       	movw	r30, r16
 12e:	80 83       	st	Z, r24
		byteBufferPointer2 = 8;
	}
	
	public: int hasData()
	{
		if (recivedDataLength > 0 && !isReading()) {
 130:	cf 5f       	subi	r28, 0xFF	; 255
 132:	de 4f       	sbci	r29, 0xFE	; 254
 134:	88 81       	ld	r24, Y
 136:	c1 50       	subi	r28, 0x01	; 1
 138:	d1 40       	sbci	r29, 0x01	; 1
 13a:	18 16       	cp	r1, r24
 13c:	74 f4       	brge	.+28     	; 0x15a <_ZN6System5startEv+0xda>
	public: bool isSending() {
		return remainingSendPackets >= 0 && doSend;
	}
	
	public: bool isReading() {
		return remainingRecivePackets > 0 && doRead;
 13e:	ce 5f       	subi	r28, 0xFE	; 254
 140:	de 4f       	sbci	r29, 0xFE	; 254
 142:	98 81       	ld	r25, Y
 144:	c2 50       	subi	r28, 0x02	; 2
 146:	d1 40       	sbci	r29, 0x01	; 1
 148:	19 16       	cp	r1, r25
 14a:	14 f4       	brge	.+4      	; 0x150 <_ZN6System5startEv+0xd0>
 14c:	99 81       	ldd	r25, Y+1	; 0x01
 14e:	01 c0       	rjmp	.+2      	; 0x152 <_ZN6System5startEv+0xd2>
 150:	90 e0       	ldi	r25, 0x00	; 0
		byteBufferPointer2 = 8;
	}
	
	public: int hasData()
	{
		if (recivedDataLength > 0 && !isReading()) {
 152:	91 11       	cpse	r25, r1
 154:	04 c0       	rjmp	.+8      	; 0x15e <_ZN6System5startEv+0xde>
 156:	91 e0       	ldi	r25, 0x01	; 1
 158:	03 c0       	rjmp	.+6      	; 0x160 <_ZN6System5startEv+0xe0>
 15a:	90 e0       	ldi	r25, 0x00	; 0
 15c:	01 c0       	rjmp	.+2      	; 0x160 <_ZN6System5startEv+0xe0>
 15e:	90 e0       	ldi	r25, 0x00	; 0
 160:	99 23       	and	r25, r25
 162:	21 f0       	breq	.+8      	; 0x16c <_ZN6System5startEv+0xec>
			return recivedDataLength;
 164:	08 2e       	mov	r0, r24
 166:	00 0c       	add	r0, r0
 168:	99 0b       	sbc	r25, r25
 16a:	02 c0       	rjmp	.+4      	; 0x170 <_ZN6System5startEv+0xf0>
		} else {
			return 0;
 16c:	80 e0       	ldi	r24, 0x00	; 0
 16e:	90 e0       	ldi	r25, 0x00	; 0
		while(1)
		{
			
			int8_t dataLength = com.hasData();
			
			if (dataLength > 0) {
 170:	18 16       	cp	r1, r24
 172:	0c f0       	brlt	.+2      	; 0x176 <_ZN6System5startEv+0xf6>
 174:	ed c0       	rjmp	.+474    	; 0x350 <_ZN6System5startEv+0x2d0>
		}
	}
	
	public: int8_t* getData()
	{
		recivedDataLength = 0;
 176:	cf 5f       	subi	r28, 0xFF	; 255
 178:	de 4f       	sbci	r29, 0xFE	; 254
 17a:	18 82       	st	Y, r1
 17c:	c1 50       	subi	r28, 0x01	; 1
 17e:	d1 40       	sbci	r29, 0x01	; 1
				
				int8_t* data = com.getData();
				
				if (data[0] == address && bootTimer == BOOT_LOCK_TIME) {
 180:	9a 81       	ldd	r25, Y+2	; 0x02
 182:	d8 01       	movw	r26, r16
 184:	2c 91       	ld	r18, X
 186:	92 13       	cpse	r25, r18
 188:	73 c0       	rjmp	.+230    	; 0x270 <_ZN6System5startEv+0x1f0>
 18a:	11 96       	adiw	r26, 0x01	; 1
 18c:	2d 91       	ld	r18, X+
 18e:	3c 91       	ld	r19, X
 190:	12 97       	sbiw	r26, 0x02	; 2
 192:	28 38       	cpi	r18, 0x88	; 136
 194:	33 41       	sbci	r19, 0x13	; 19
 196:	09 f0       	breq	.+2      	; 0x19a <_ZN6System5startEv+0x11a>
 198:	6b c0       	rjmp	.+214    	; 0x270 <_ZN6System5startEv+0x1f0>
					
					if (dataLength == 1) {
 19a:	81 30       	cpi	r24, 0x01	; 1
 19c:	09 f0       	breq	.+2      	; 0x1a0 <_ZN6System5startEv+0x120>
 19e:	60 c0       	rjmp	.+192    	; 0x260 <_ZN6System5startEv+0x1e0>
						
						int8_t portStates[2] = {0};
 1a0:	c3 5f       	subi	r28, 0xF3	; 243
 1a2:	dd 4f       	sbci	r29, 0xFD	; 253
 1a4:	19 82       	std	Y+1, r1	; 0x01
 1a6:	18 82       	st	Y, r1
 1a8:	cd 50       	subi	r28, 0x0D	; 13
 1aa:	d2 40       	sbci	r29, 0x02	; 2
							
							portStates[0] = PORTC;
 1ac:	88 b1       	in	r24, 0x08	; 8
 1ae:	c3 5f       	subi	r28, 0xF3	; 243
 1b0:	dd 4f       	sbci	r29, 0xFD	; 253
 1b2:	88 83       	st	Y, r24
 1b4:	cd 50       	subi	r28, 0x0D	; 13
 1b6:	d2 40       	sbci	r29, 0x02	; 2
							portStates[1] = PORTC;
 1b8:	88 b1       	in	r24, 0x08	; 8
 1ba:	c2 5f       	subi	r28, 0xF2	; 242
 1bc:	dd 4f       	sbci	r29, 0xFD	; 253
 1be:	88 83       	st	Y, r24
 1c0:	ce 50       	subi	r28, 0x0E	; 14
 1c2:	d2 40       	sbci	r29, 0x02	; 2
		return data;
	}

	public: void setSendData(int8_t* data, int8_t length)
	{
		sendData[length + 1] = {0};
 1c4:	c6 5f       	subi	r28, 0xF6	; 246
 1c6:	de 4f       	sbci	r29, 0xFE	; 254
 1c8:	18 82       	st	Y, r1
 1ca:	ca 50       	subi	r28, 0x0A	; 10
 1cc:	d1 40       	sbci	r29, 0x01	; 1
		sendData[0] = length;
 1ce:	82 e0       	ldi	r24, 0x02	; 2
 1d0:	c9 5f       	subi	r28, 0xF9	; 249
 1d2:	de 4f       	sbci	r29, 0xFE	; 254
 1d4:	88 83       	st	Y, r24
 1d6:	c7 50       	subi	r28, 0x07	; 7
 1d8:	d1 40       	sbci	r29, 0x01	; 1
		for (int8_t i = 0; i < length; i++) sendData[i + 1] = data[i];
 1da:	80 e0       	ldi	r24, 0x00	; 0
 1dc:	82 30       	cpi	r24, 0x02	; 2
 1de:	b4 f4       	brge	.+44     	; 0x20c <_ZN6System5startEv+0x18c>
 1e0:	28 2f       	mov	r18, r24
 1e2:	08 2e       	mov	r0, r24
 1e4:	00 0c       	add	r0, r0
 1e6:	33 0b       	sbc	r19, r19
 1e8:	f9 01       	movw	r30, r18
 1ea:	31 96       	adiw	r30, 0x01	; 1
 1ec:	ad e0       	ldi	r26, 0x0D	; 13
 1ee:	b2 e0       	ldi	r27, 0x02	; 2
 1f0:	ac 0f       	add	r26, r28
 1f2:	bd 1f       	adc	r27, r29
 1f4:	a2 0f       	add	r26, r18
 1f6:	b3 1f       	adc	r27, r19
 1f8:	9c 91       	ld	r25, X
 1fa:	27 e0       	ldi	r18, 0x07	; 7
 1fc:	31 e0       	ldi	r19, 0x01	; 1
 1fe:	2c 0f       	add	r18, r28
 200:	3d 1f       	adc	r19, r29
 202:	e2 0f       	add	r30, r18
 204:	f3 1f       	adc	r31, r19
 206:	90 83       	st	Z, r25
 208:	8f 5f       	subi	r24, 0xFF	; 255
 20a:	e8 cf       	rjmp	.-48     	; 0x1dc <_ZN6System5startEv+0x15c>
		remainingSendPackets = length;
 20c:	82 e0       	ldi	r24, 0x02	; 2
 20e:	c9 5f       	subi	r28, 0xF9	; 249
 210:	dd 4f       	sbci	r29, 0xFD	; 253
 212:	88 83       	st	Y, r24
 214:	c7 50       	subi	r28, 0x07	; 7
 216:	d2 40       	sbci	r29, 0x02	; 2
		sendDataLength = length;
 218:	ca 5f       	subi	r28, 0xFA	; 250
 21a:	dd 4f       	sbci	r29, 0xFD	; 253
 21c:	88 83       	st	Y, r24
 21e:	c6 50       	subi	r28, 0x06	; 6
 220:	d2 40       	sbci	r29, 0x02	; 2
		byteBuffer2 = 0;
 222:	c8 5f       	subi	r28, 0xF8	; 248
 224:	dd 4f       	sbci	r29, 0xFD	; 253
 226:	18 82       	st	Y, r1
 228:	c8 50       	subi	r28, 0x08	; 8
 22a:	d2 40       	sbci	r29, 0x02	; 2
		byteBufferPointer2 = 8;
 22c:	88 e0       	ldi	r24, 0x08	; 8
 22e:	c7 5f       	subi	r28, 0xF7	; 247
 230:	dd 4f       	sbci	r29, 0xFD	; 253
 232:	88 83       	st	Y, r24
 234:	c9 50       	subi	r28, 0x09	; 9
 236:	d2 40       	sbci	r29, 0x02	; 2
	public: bool isDataSend() {
		return sendDataLength == 0 && !isSending();
	}

	public: bool isSending() {
		return remainingSendPackets >= 0 && doSend;
 238:	ca 5f       	subi	r28, 0xFA	; 250
 23a:	de 4f       	sbci	r29, 0xFE	; 254
 23c:	88 81       	ld	r24, Y
 23e:	c6 50       	subi	r28, 0x06	; 6
 240:	d1 40       	sbci	r29, 0x01	; 1
		
	}
	
	public: void startSending() {
		
		if (remainingSendPackets > 0 && !isSending()) requestSend = true;
 242:	81 11       	cpse	r24, r1
 244:	02 c0       	rjmp	.+4      	; 0x24a <_ZN6System5startEv+0x1ca>
 246:	81 e0       	ldi	r24, 0x01	; 1
 248:	01 c0       	rjmp	.+2      	; 0x24c <_ZN6System5startEv+0x1cc>
 24a:	80 e0       	ldi	r24, 0x00	; 0
 24c:	88 23       	and	r24, r24
 24e:	09 f4       	brne	.+2      	; 0x252 <_ZN6System5startEv+0x1d2>
 250:	7f c0       	rjmp	.+254    	; 0x350 <_ZN6System5startEv+0x2d0>
 252:	81 e0       	ldi	r24, 0x01	; 1
 254:	cb 5f       	subi	r28, 0xFB	; 251
 256:	de 4f       	sbci	r29, 0xFE	; 254
 258:	88 83       	st	Y, r24
 25a:	c5 50       	subi	r28, 0x05	; 5
 25c:	d1 40       	sbci	r29, 0x01	; 1
 25e:	78 c0       	rjmp	.+240    	; 0x350 <_ZN6System5startEv+0x2d0>
						
							com.setSendData(portStates, 2);
							com.startSending();
							
						} else if (dataLength == 3) {
 260:	83 30       	cpi	r24, 0x03	; 3
 262:	09 f0       	breq	.+2      	; 0x266 <_ZN6System5startEv+0x1e6>
 264:	75 c0       	rjmp	.+234    	; 0x350 <_ZN6System5startEv+0x2d0>
						
						PORTD = data[1];
 266:	8b 81       	ldd	r24, Y+3	; 0x03
 268:	8b b9       	out	0x0b, r24	; 11
						PORTB = data[0];
 26a:	8a 81       	ldd	r24, Y+2	; 0x02
 26c:	85 b9       	out	0x05, r24	; 5
 26e:	70 c0       	rjmp	.+224    	; 0x350 <_ZN6System5startEv+0x2d0>
						
					}
					
				} else if (data[0] == MASTER_ADRESS && bootTimer < BOOT_LOCK_TIME) {
 270:	91 11       	cpse	r25, r1
 272:	6e c0       	rjmp	.+220    	; 0x350 <_ZN6System5startEv+0x2d0>
 274:	d8 01       	movw	r26, r16
 276:	11 96       	adiw	r26, 0x01	; 1
 278:	2d 91       	ld	r18, X+
 27a:	3c 91       	ld	r19, X
 27c:	12 97       	sbiw	r26, 0x02	; 2
 27e:	28 38       	cpi	r18, 0x88	; 136
 280:	33 41       	sbci	r19, 0x13	; 19
 282:	0c f0       	brlt	.+2      	; 0x286 <_ZN6System5startEv+0x206>
 284:	65 c0       	rjmp	.+202    	; 0x350 <_ZN6System5startEv+0x2d0>
					
					if (dataLength == 2) {
 286:	82 30       	cpi	r24, 0x02	; 2
 288:	09 f0       	breq	.+2      	; 0x28c <_ZN6System5startEv+0x20c>
 28a:	62 c0       	rjmp	.+196    	; 0x350 <_ZN6System5startEv+0x2d0>
						
						setAdress(data[1]);
 28c:	6b 81       	ldd	r22, Y+3	; 0x03
		
	}
	
	public: void setAdress(int8_t adress) {
		uint8_t data = (uint8_t) adress;
		eeprom_update_byte((uint8_t *) 0x0, data);
 28e:	80 e0       	ldi	r24, 0x00	; 0
 290:	90 e0       	ldi	r25, 0x00	; 0
 292:	0e 94 81 03 	call	0x702	; 0x702 <eeprom_update_byte>
		loadAdress();
	}
	
	public: void loadAdress() {
		uint8_t data = eeprom_read_byte((uint8_t *) 0x0);
 296:	80 e0       	ldi	r24, 0x00	; 0
 298:	90 e0       	ldi	r25, 0x00	; 0
 29a:	0e 94 79 03 	call	0x6f2	; 0x6f2 <eeprom_read_byte>
		address = (int8_t) data;
 29e:	f8 01       	movw	r30, r16
 2a0:	80 83       	st	Z, r24
				} else if (data[0] == MASTER_ADRESS && bootTimer < BOOT_LOCK_TIME) {
					
					if (dataLength == 2) {
						
						setAdress(data[1]);
						int8_t confirmMsg[2] = {0};
 2a2:	c3 5f       	subi	r28, 0xF3	; 243
 2a4:	dd 4f       	sbci	r29, 0xFD	; 253
 2a6:	19 82       	std	Y+1, r1	; 0x01
 2a8:	18 82       	st	Y, r1
 2aa:	cd 50       	subi	r28, 0x0D	; 13
 2ac:	d2 40       	sbci	r29, 0x02	; 2
						confirmMsg[0] = MASTER_ADRESS;
						confirmMsg[1] = address;
 2ae:	c2 5f       	subi	r28, 0xF2	; 242
 2b0:	dd 4f       	sbci	r29, 0xFD	; 253
 2b2:	88 83       	st	Y, r24
 2b4:	ce 50       	subi	r28, 0x0E	; 14
 2b6:	d2 40       	sbci	r29, 0x02	; 2
		return data;
	}

	public: void setSendData(int8_t* data, int8_t length)
	{
		sendData[length + 1] = {0};
 2b8:	c6 5f       	subi	r28, 0xF6	; 246
 2ba:	de 4f       	sbci	r29, 0xFE	; 254
 2bc:	18 82       	st	Y, r1
 2be:	ca 50       	subi	r28, 0x0A	; 10
 2c0:	d1 40       	sbci	r29, 0x01	; 1
		sendData[0] = length;
 2c2:	82 e0       	ldi	r24, 0x02	; 2
 2c4:	c9 5f       	subi	r28, 0xF9	; 249
 2c6:	de 4f       	sbci	r29, 0xFE	; 254
 2c8:	88 83       	st	Y, r24
 2ca:	c7 50       	subi	r28, 0x07	; 7
 2cc:	d1 40       	sbci	r29, 0x01	; 1
		for (int8_t i = 0; i < length; i++) sendData[i + 1] = data[i];
 2ce:	80 e0       	ldi	r24, 0x00	; 0
 2d0:	82 30       	cpi	r24, 0x02	; 2
 2d2:	b4 f4       	brge	.+44     	; 0x300 <_ZN6System5startEv+0x280>
 2d4:	28 2f       	mov	r18, r24
 2d6:	08 2e       	mov	r0, r24
 2d8:	00 0c       	add	r0, r0
 2da:	33 0b       	sbc	r19, r19
 2dc:	f9 01       	movw	r30, r18
 2de:	31 96       	adiw	r30, 0x01	; 1
 2e0:	ad e0       	ldi	r26, 0x0D	; 13
 2e2:	b2 e0       	ldi	r27, 0x02	; 2
 2e4:	ac 0f       	add	r26, r28
 2e6:	bd 1f       	adc	r27, r29
 2e8:	a2 0f       	add	r26, r18
 2ea:	b3 1f       	adc	r27, r19
 2ec:	9c 91       	ld	r25, X
 2ee:	27 e0       	ldi	r18, 0x07	; 7
 2f0:	31 e0       	ldi	r19, 0x01	; 1
 2f2:	2c 0f       	add	r18, r28
 2f4:	3d 1f       	adc	r19, r29
 2f6:	e2 0f       	add	r30, r18
 2f8:	f3 1f       	adc	r31, r19
 2fa:	90 83       	st	Z, r25
 2fc:	8f 5f       	subi	r24, 0xFF	; 255
 2fe:	e8 cf       	rjmp	.-48     	; 0x2d0 <_ZN6System5startEv+0x250>
		remainingSendPackets = length;
 300:	82 e0       	ldi	r24, 0x02	; 2
 302:	c9 5f       	subi	r28, 0xF9	; 249
 304:	dd 4f       	sbci	r29, 0xFD	; 253
 306:	88 83       	st	Y, r24
 308:	c7 50       	subi	r28, 0x07	; 7
 30a:	d2 40       	sbci	r29, 0x02	; 2
		sendDataLength = length;
 30c:	ca 5f       	subi	r28, 0xFA	; 250
 30e:	dd 4f       	sbci	r29, 0xFD	; 253
 310:	88 83       	st	Y, r24
 312:	c6 50       	subi	r28, 0x06	; 6
 314:	d2 40       	sbci	r29, 0x02	; 2
		byteBuffer2 = 0;
 316:	c8 5f       	subi	r28, 0xF8	; 248
 318:	dd 4f       	sbci	r29, 0xFD	; 253
 31a:	18 82       	st	Y, r1
 31c:	c8 50       	subi	r28, 0x08	; 8
 31e:	d2 40       	sbci	r29, 0x02	; 2
		byteBufferPointer2 = 8;
 320:	88 e0       	ldi	r24, 0x08	; 8
 322:	c7 5f       	subi	r28, 0xF7	; 247
 324:	dd 4f       	sbci	r29, 0xFD	; 253
 326:	88 83       	st	Y, r24
 328:	c9 50       	subi	r28, 0x09	; 9
 32a:	d2 40       	sbci	r29, 0x02	; 2
	public: bool isDataSend() {
		return sendDataLength == 0 && !isSending();
	}

	public: bool isSending() {
		return remainingSendPackets >= 0 && doSend;
 32c:	ca 5f       	subi	r28, 0xFA	; 250
 32e:	de 4f       	sbci	r29, 0xFE	; 254
 330:	88 81       	ld	r24, Y
 332:	c6 50       	subi	r28, 0x06	; 6
 334:	d1 40       	sbci	r29, 0x01	; 1
		
	}
	
	public: void startSending() {
		
		if (remainingSendPackets > 0 && !isSending()) requestSend = true;
 336:	81 11       	cpse	r24, r1
 338:	02 c0       	rjmp	.+4      	; 0x33e <_ZN6System5startEv+0x2be>
 33a:	81 e0       	ldi	r24, 0x01	; 1
 33c:	01 c0       	rjmp	.+2      	; 0x340 <_ZN6System5startEv+0x2c0>
 33e:	80 e0       	ldi	r24, 0x00	; 0
 340:	88 23       	and	r24, r24
 342:	31 f0       	breq	.+12     	; 0x350 <_ZN6System5startEv+0x2d0>
 344:	81 e0       	ldi	r24, 0x01	; 1
 346:	cb 5f       	subi	r28, 0xFB	; 251
 348:	de 4f       	sbci	r29, 0xFE	; 254
 34a:	88 83       	st	Y, r24
 34c:	c5 50       	subi	r28, 0x05	; 5
 34e:	d1 40       	sbci	r29, 0x01	; 1
					
				}
				
			}
			
			if (bootTimer < BOOT_LOCK_TIME) bootTimer++;
 350:	d8 01       	movw	r26, r16
 352:	11 96       	adiw	r26, 0x01	; 1
 354:	8d 91       	ld	r24, X+
 356:	9c 91       	ld	r25, X
 358:	12 97       	sbiw	r26, 0x02	; 2
 35a:	88 38       	cpi	r24, 0x88	; 136
 35c:	b3 e1       	ldi	r27, 0x13	; 19
 35e:	9b 07       	cpc	r25, r27
 360:	24 f4       	brge	.+8      	; 0x36a <_ZN6System5startEv+0x2ea>
 362:	01 96       	adiw	r24, 0x01	; 1
 364:	f8 01       	movw	r30, r16
 366:	92 83       	std	Z+2, r25	; 0x02
 368:	81 83       	std	Z+1, r24	; 0x01
		
	}

	public: void update() {
		
		bool enable = (PINC & PINC_ENABLE) > 0;
 36a:	86 b1       	in	r24, 0x06	; 6
 36c:	80 72       	andi	r24, 0x20	; 32
 36e:	90 e0       	ldi	r25, 0x00	; 0
		
		// Prevent listening to half message (on startup)
		if (!enableListening && !enable) enableListening = true;
 370:	c4 5f       	subi	r28, 0xF4	; 244
 372:	dd 4f       	sbci	r29, 0xFD	; 253
 374:	28 81       	ld	r18, Y
 376:	cc 50       	subi	r28, 0x0C	; 12
 378:	d2 40       	sbci	r29, 0x02	; 2
 37a:	21 11       	cpse	r18, r1
 37c:	09 c0       	rjmp	.+18     	; 0x390 <_ZN6System5startEv+0x310>
 37e:	18 16       	cp	r1, r24
 380:	19 06       	cpc	r1, r25
 382:	34 f0       	brlt	.+12     	; 0x390 <_ZN6System5startEv+0x310>
 384:	21 e0       	ldi	r18, 0x01	; 1
 386:	c4 5f       	subi	r28, 0xF4	; 244
 388:	dd 4f       	sbci	r29, 0xFD	; 253
 38a:	28 83       	st	Y, r18
 38c:	cc 50       	subi	r28, 0x0C	; 12
 38e:	d2 40       	sbci	r29, 0x02	; 2
		
		if (enable && enableListening)  {
 390:	18 16       	cp	r1, r24
 392:	19 06       	cpc	r1, r25
 394:	0c f0       	brlt	.+2      	; 0x398 <_ZN6System5startEv+0x318>
 396:	cc ce       	rjmp	.-616    	; 0x130 <_ZN6System5startEv+0xb0>
 398:	c4 5f       	subi	r28, 0xF4	; 244
 39a:	dd 4f       	sbci	r29, 0xFD	; 253
 39c:	28 81       	ld	r18, Y
 39e:	cc 50       	subi	r28, 0x0C	; 12
 3a0:	d2 40       	sbci	r29, 0x02	; 2
 3a2:	22 23       	and	r18, r18
 3a4:	09 f4       	brne	.+2      	; 0x3a8 <_ZN6System5startEv+0x328>
 3a6:	c4 ce       	rjmp	.-632    	; 0x130 <_ZN6System5startEv+0xb0>
			
			bool clckHigh = (PINC & PINC_CLCK) > 0;
 3a8:	86 b1       	in	r24, 0x06	; 6
 3aa:	80 71       	andi	r24, 0x10	; 16
 3ac:	90 e0       	ldi	r25, 0x00	; 0
				handleTimer = 0;
			} else if (hasHandledClckPulse) {
				handleTimer++;
			}
			
			if (clckHigh && !hasHandledClckPulse) {
 3ae:	18 16       	cp	r1, r24
 3b0:	19 06       	cpc	r1, r25
 3b2:	0c f0       	brlt	.+2      	; 0x3b6 <_ZN6System5startEv+0x336>
 3b4:	69 c1       	rjmp	.+722    	; 0x688 <__EEPROM_REGION_LENGTH__+0x288>
 3b6:	c6 5f       	subi	r28, 0xF6	; 246
 3b8:	dd 4f       	sbci	r29, 0xFD	; 253
 3ba:	38 81       	ld	r19, Y
 3bc:	ca 50       	subi	r28, 0x0A	; 10
 3be:	d2 40       	sbci	r29, 0x02	; 2
 3c0:	31 11       	cpse	r19, r1
 3c2:	62 c1       	rjmp	.+708    	; 0x688 <__EEPROM_REGION_LENGTH__+0x288>
				
				hasHandledClckPulse = true;
 3c4:	81 e0       	ldi	r24, 0x01	; 1
 3c6:	c6 5f       	subi	r28, 0xF6	; 246
 3c8:	dd 4f       	sbci	r29, 0xFD	; 253
 3ca:	88 83       	st	Y, r24
 3cc:	ca 50       	subi	r28, 0x0A	; 10
 3ce:	d2 40       	sbci	r29, 0x02	; 2
	public: bool isDataSend() {
		return sendDataLength == 0 && !isSending();
	}

	public: bool isSending() {
		return remainingSendPackets >= 0 && doSend;
 3d0:	c9 5f       	subi	r28, 0xF9	; 249
 3d2:	dd 4f       	sbci	r29, 0xFD	; 253
 3d4:	78 81       	ld	r23, Y
 3d6:	c7 50       	subi	r28, 0x07	; 7
 3d8:	d2 40       	sbci	r29, 0x02	; 2
 3da:	77 23       	and	r23, r23
 3dc:	4c f0       	brlt	.+18     	; 0x3f0 <_ZN6System5startEv+0x370>
 3de:	ca 5f       	subi	r28, 0xFA	; 250
 3e0:	de 4f       	sbci	r29, 0xFE	; 254
 3e2:	68 81       	ld	r22, Y
 3e4:	c6 50       	subi	r28, 0x06	; 6
 3e6:	d1 40       	sbci	r29, 0x01	; 1
 3e8:	61 11       	cpse	r22, r1
 3ea:	03 c0       	rjmp	.+6      	; 0x3f2 <_ZN6System5startEv+0x372>
 3ec:	63 2f       	mov	r22, r19
 3ee:	01 c0       	rjmp	.+2      	; 0x3f2 <_ZN6System5startEv+0x372>
 3f0:	63 2f       	mov	r22, r19
			
			if (clckHigh && !hasHandledClckPulse) {
				
				hasHandledClckPulse = true;
				
				if (!isSending()) {
 3f2:	61 11       	cpse	r22, r1
 3f4:	a7 c0       	rjmp	.+334    	; 0x544 <__EEPROM_REGION_LENGTH__+0x144>
					
					// get recived Value
					bool recivedBit1 = (PINC & PINC_COM_1) > 0;
 3f6:	41 e0       	ldi	r20, 0x01	; 1
 3f8:	32 9b       	sbis	0x06, 2	; 6
 3fa:	40 e0       	ldi	r20, 0x00	; 0
					bool recivedBit2 = (PINC & PINC_COM_2) > 0;
 3fc:	91 e0       	ldi	r25, 0x01	; 1
 3fe:	33 9b       	sbis	0x06, 3	; 6
 400:	90 e0       	ldi	r25, 0x00	; 0
					byteBuffer |= (recivedBit1 << (byteBufferPointer + 0));
 402:	cc 5f       	subi	r28, 0xFC	; 252
 404:	de 4f       	sbci	r29, 0xFE	; 254
 406:	38 81       	ld	r19, Y
 408:	c4 50       	subi	r28, 0x04	; 4
 40a:	d1 40       	sbci	r29, 0x01	; 1
 40c:	e3 2f       	mov	r30, r19
 40e:	03 2e       	mov	r0, r19
 410:	00 0c       	add	r0, r0
 412:	ff 0b       	sbc	r31, r31
 414:	50 e0       	ldi	r21, 0x00	; 0
 416:	03 2e       	mov	r0, r19
 418:	02 c0       	rjmp	.+4      	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
 41a:	44 0f       	add	r20, r20
 41c:	55 1f       	adc	r21, r21
 41e:	0a 94       	dec	r0
 420:	e2 f7       	brpl	.-8      	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
 422:	cd 5f       	subi	r28, 0xFD	; 253
 424:	de 4f       	sbci	r29, 0xFE	; 254
 426:	88 81       	ld	r24, Y
 428:	c3 50       	subi	r28, 0x03	; 3
 42a:	d1 40       	sbci	r29, 0x01	; 1
 42c:	48 2b       	or	r20, r24
					byteBuffer |= (recivedBit2 << (byteBufferPointer + 1));
 42e:	31 96       	adiw	r30, 0x01	; 1
 430:	89 2f       	mov	r24, r25
 432:	90 e0       	ldi	r25, 0x00	; 0
 434:	02 c0       	rjmp	.+4      	; 0x43a <__EEPROM_REGION_LENGTH__+0x3a>
 436:	88 0f       	add	r24, r24
 438:	99 1f       	adc	r25, r25
 43a:	ea 95       	dec	r30
 43c:	e2 f7       	brpl	.-8      	; 0x436 <__EEPROM_REGION_LENGTH__+0x36>
 43e:	84 2b       	or	r24, r20
 440:	cd 5f       	subi	r28, 0xFD	; 253
 442:	de 4f       	sbci	r29, 0xFE	; 254
 444:	88 83       	st	Y, r24
 446:	c3 50       	subi	r28, 0x03	; 3
 448:	d1 40       	sbci	r29, 0x01	; 1
					byteBufferPointer += 2;
 44a:	3e 5f       	subi	r19, 0xFE	; 254
 44c:	cc 5f       	subi	r28, 0xFC	; 252
 44e:	de 4f       	sbci	r29, 0xFE	; 254
 450:	38 83       	st	Y, r19
 452:	c4 50       	subi	r28, 0x04	; 4
 454:	d1 40       	sbci	r29, 0x01	; 1
					
					if (byteBufferPointer >= 8) {
 456:	38 30       	cpi	r19, 0x08	; 8
 458:	0c f4       	brge	.+2      	; 0x45c <__EEPROM_REGION_LENGTH__+0x5c>
 45a:	6a ce       	rjmp	.-812    	; 0x130 <_ZN6System5startEv+0xb0>
						
						int8_t recived = byteBuffer;
						byteBuffer = 0;
 45c:	cd 5f       	subi	r28, 0xFD	; 253
 45e:	de 4f       	sbci	r29, 0xFE	; 254
 460:	18 82       	st	Y, r1
 462:	c3 50       	subi	r28, 0x03	; 3
 464:	d1 40       	sbci	r29, 0x01	; 1
						byteBufferPointer = 0;
 466:	cc 5f       	subi	r28, 0xFC	; 252
 468:	de 4f       	sbci	r29, 0xFE	; 254
 46a:	18 82       	st	Y, r1
 46c:	c4 50       	subi	r28, 0x04	; 4
 46e:	d1 40       	sbci	r29, 0x01	; 1
						
						if (remainingRecivePackets == 0 && recived > 0 && !isSending() && !isReading()) {
 470:	ce 5f       	subi	r28, 0xFE	; 254
 472:	de 4f       	sbci	r29, 0xFE	; 254
 474:	98 81       	ld	r25, Y
 476:	c2 50       	subi	r28, 0x02	; 2
 478:	d1 40       	sbci	r29, 0x01	; 1
 47a:	91 11       	cpse	r25, r1
 47c:	1d c0       	rjmp	.+58     	; 0x4b8 <__EEPROM_REGION_LENGTH__+0xb8>
 47e:	18 16       	cp	r1, r24
 480:	dc f4       	brge	.+54     	; 0x4b8 <__EEPROM_REGION_LENGTH__+0xb8>
	public: bool isDataSend() {
		return sendDataLength == 0 && !isSending();
	}

	public: bool isSending() {
		return remainingSendPackets >= 0 && doSend;
 482:	77 23       	and	r23, r23
 484:	4c f0       	brlt	.+18     	; 0x498 <__EEPROM_REGION_LENGTH__+0x98>
 486:	ca 5f       	subi	r28, 0xFA	; 250
 488:	de 4f       	sbci	r29, 0xFE	; 254
 48a:	38 81       	ld	r19, Y
 48c:	c6 50       	subi	r28, 0x06	; 6
 48e:	d1 40       	sbci	r29, 0x01	; 1
 490:	31 11       	cpse	r19, r1
 492:	03 c0       	rjmp	.+6      	; 0x49a <__EEPROM_REGION_LENGTH__+0x9a>
 494:	36 2f       	mov	r19, r22
 496:	01 c0       	rjmp	.+2      	; 0x49a <__EEPROM_REGION_LENGTH__+0x9a>
 498:	36 2f       	mov	r19, r22
						
						int8_t recived = byteBuffer;
						byteBuffer = 0;
						byteBufferPointer = 0;
						
						if (remainingRecivePackets == 0 && recived > 0 && !isSending() && !isReading()) {
 49a:	31 11       	cpse	r19, r1
 49c:	0d c0       	rjmp	.+26     	; 0x4b8 <__EEPROM_REGION_LENGTH__+0xb8>
	public: bool isSending() {
		return remainingSendPackets >= 0 && doSend;
	}
	
	public: bool isReading() {
		return remainingRecivePackets > 0 && doRead;
 49e:	19 16       	cp	r1, r25
 4a0:	2c f4       	brge	.+10     	; 0x4ac <__EEPROM_REGION_LENGTH__+0xac>
 4a2:	49 81       	ldd	r20, Y+1	; 0x01
 4a4:	41 11       	cpse	r20, r1
 4a6:	03 c0       	rjmp	.+6      	; 0x4ae <__EEPROM_REGION_LENGTH__+0xae>
 4a8:	43 2f       	mov	r20, r19
 4aa:	01 c0       	rjmp	.+2      	; 0x4ae <__EEPROM_REGION_LENGTH__+0xae>
 4ac:	43 2f       	mov	r20, r19
						
						int8_t recived = byteBuffer;
						byteBuffer = 0;
						byteBufferPointer = 0;
						
						if (remainingRecivePackets == 0 && recived > 0 && !isSending() && !isReading()) {
 4ae:	41 11       	cpse	r20, r1
 4b0:	02 c0       	rjmp	.+4      	; 0x4b6 <__EEPROM_REGION_LENGTH__+0xb6>
 4b2:	62 2f       	mov	r22, r18
 4b4:	01 c0       	rjmp	.+2      	; 0x4b8 <__EEPROM_REGION_LENGTH__+0xb8>
 4b6:	63 2f       	mov	r22, r19
 4b8:	66 23       	and	r22, r22
 4ba:	b1 f0       	breq	.+44     	; 0x4e8 <__EEPROM_REGION_LENGTH__+0xe8>
							
							// Set RemainingPackets to recived Value and Start Reading
							doRead = true;
 4bc:	91 e0       	ldi	r25, 0x01	; 1
 4be:	99 83       	std	Y+1, r25	; 0x01
							remainingRecivePackets = recived;
 4c0:	ce 5f       	subi	r28, 0xFE	; 254
 4c2:	de 4f       	sbci	r29, 0xFE	; 254
 4c4:	88 83       	st	Y, r24
 4c6:	c2 50       	subi	r28, 0x02	; 2
 4c8:	d1 40       	sbci	r29, 0x01	; 1
							recivedData[recived] = {0};
 4ca:	e2 e0       	ldi	r30, 0x02	; 2
 4cc:	f0 e0       	ldi	r31, 0x00	; 0
 4ce:	ec 0f       	add	r30, r28
 4d0:	fd 1f       	adc	r31, r29
 4d2:	e8 0f       	add	r30, r24
 4d4:	f1 1d       	adc	r31, r1
 4d6:	87 fd       	sbrc	r24, 7
 4d8:	fa 95       	dec	r31
 4da:	10 82       	st	Z, r1
							recivedDataLength = recived;
 4dc:	cf 5f       	subi	r28, 0xFF	; 255
 4de:	de 4f       	sbci	r29, 0xFE	; 254
 4e0:	88 83       	st	Y, r24
 4e2:	c1 50       	subi	r28, 0x01	; 1
 4e4:	d1 40       	sbci	r29, 0x01	; 1
 4e6:	24 ce       	rjmp	.-952    	; 0x130 <_ZN6System5startEv+0xb0>
	public: bool isSending() {
		return remainingSendPackets >= 0 && doSend;
	}
	
	public: bool isReading() {
		return remainingRecivePackets > 0 && doRead;
 4e8:	19 16       	cp	r1, r25
 4ea:	2c f4       	brge	.+10     	; 0x4f6 <__EEPROM_REGION_LENGTH__+0xf6>
 4ec:	29 81       	ldd	r18, Y+1	; 0x01
 4ee:	21 11       	cpse	r18, r1
 4f0:	03 c0       	rjmp	.+6      	; 0x4f8 <__EEPROM_REGION_LENGTH__+0xf8>
 4f2:	26 2f       	mov	r18, r22
 4f4:	01 c0       	rjmp	.+2      	; 0x4f8 <__EEPROM_REGION_LENGTH__+0xf8>
 4f6:	26 2f       	mov	r18, r22
							recivedDataLength = recived;
							return;
							
						}
						
						if (isReading() && remainingRecivePackets > 0) {
 4f8:	22 23       	and	r18, r18
 4fa:	19 f0       	breq	.+6      	; 0x502 <__EEPROM_REGION_LENGTH__+0x102>
 4fc:	19 16       	cp	r1, r25
 4fe:	0c f4       	brge	.+2      	; 0x502 <__EEPROM_REGION_LENGTH__+0x102>
 500:	62 2f       	mov	r22, r18
 502:	66 23       	and	r22, r22
 504:	09 f4       	brne	.+2      	; 0x508 <__EEPROM_REGION_LENGTH__+0x108>
 506:	14 ce       	rjmp	.-984    	; 0x130 <_ZN6System5startEv+0xb0>
							
							// Add recived Value to recivedPackets and count as Packet
							recivedData[recivedDataLength - remainingRecivePackets] = recived;
 508:	cf 5f       	subi	r28, 0xFF	; 255
 50a:	de 4f       	sbci	r29, 0xFE	; 254
 50c:	e8 81       	ld	r30, Y
 50e:	c1 50       	subi	r28, 0x01	; 1
 510:	d1 40       	sbci	r29, 0x01	; 1
 512:	0e 2e       	mov	r0, r30
 514:	00 0c       	add	r0, r0
 516:	ff 0b       	sbc	r31, r31
 518:	e9 1b       	sub	r30, r25
 51a:	f1 09       	sbc	r31, r1
 51c:	97 fd       	sbrc	r25, 7
 51e:	f3 95       	inc	r31
 520:	22 e0       	ldi	r18, 0x02	; 2
 522:	30 e0       	ldi	r19, 0x00	; 0
 524:	2c 0f       	add	r18, r28
 526:	3d 1f       	adc	r19, r29
 528:	e2 0f       	add	r30, r18
 52a:	f3 1f       	adc	r31, r19
 52c:	80 83       	st	Z, r24
							remainingRecivePackets--;
 52e:	91 50       	subi	r25, 0x01	; 1
 530:	ce 5f       	subi	r28, 0xFE	; 254
 532:	de 4f       	sbci	r29, 0xFE	; 254
 534:	98 83       	st	Y, r25
 536:	c2 50       	subi	r28, 0x02	; 2
 538:	d1 40       	sbci	r29, 0x01	; 1
							
							if (remainingRecivePackets <= 0) {
 53a:	19 16       	cp	r1, r25
 53c:	0c f4       	brge	.+2      	; 0x540 <__EEPROM_REGION_LENGTH__+0x140>
 53e:	f8 cd       	rjmp	.-1040   	; 0x130 <_ZN6System5startEv+0xb0>
								
								doRead = false;
 540:	19 82       	std	Y+1, r1	; 0x01
 542:	f6 cd       	rjmp	.-1044   	; 0x130 <_ZN6System5startEv+0xb0>
	public: bool isSending() {
		return remainingSendPackets >= 0 && doSend;
	}
	
	public: bool isReading() {
		return remainingRecivePackets > 0 && doRead;
 544:	ce 5f       	subi	r28, 0xFE	; 254
 546:	de 4f       	sbci	r29, 0xFE	; 254
 548:	88 81       	ld	r24, Y
 54a:	c2 50       	subi	r28, 0x02	; 2
 54c:	d1 40       	sbci	r29, 0x01	; 1
 54e:	18 16       	cp	r1, r24
 550:	2c f4       	brge	.+10     	; 0x55c <__EEPROM_REGION_LENGTH__+0x15c>
 552:	89 81       	ldd	r24, Y+1	; 0x01
 554:	81 11       	cpse	r24, r1
 556:	03 c0       	rjmp	.+6      	; 0x55e <__EEPROM_REGION_LENGTH__+0x15e>
 558:	83 2f       	mov	r24, r19
 55a:	01 c0       	rjmp	.+2      	; 0x55e <__EEPROM_REGION_LENGTH__+0x15e>
 55c:	83 2f       	mov	r24, r19
							
						}
						
					}
					
				} else if (!isReading() && remainingSendPackets >= 0) {
 55e:	81 11       	cpse	r24, r1
 560:	03 c0       	rjmp	.+6      	; 0x568 <__EEPROM_REGION_LENGTH__+0x168>
 562:	77 23       	and	r23, r23
 564:	0c f0       	brlt	.+2      	; 0x568 <__EEPROM_REGION_LENGTH__+0x168>
 566:	36 2f       	mov	r19, r22
 568:	33 23       	and	r19, r19
 56a:	09 f4       	brne	.+2      	; 0x56e <__EEPROM_REGION_LENGTH__+0x16e>
 56c:	e1 cd       	rjmp	.-1086   	; 0x130 <_ZN6System5startEv+0xb0>
					
					// Send Ports Low
					PORTC = (PORTC & ~PORTC_COM_1);
 56e:	88 b1       	in	r24, 0x08	; 8
 570:	8e 7f       	andi	r24, 0xFE	; 254
 572:	88 b9       	out	0x08, r24	; 8
					PORTC = (PORTC & ~PORTC_COM_2);
 574:	88 b1       	in	r24, 0x08	; 8
 576:	8d 7f       	andi	r24, 0xFD	; 253
 578:	88 b9       	out	0x08, r24	; 8
					
					if (byteBufferPointer2 >= 8) {
 57a:	c7 5f       	subi	r28, 0xF7	; 247
 57c:	dd 4f       	sbci	r29, 0xFD	; 253
 57e:	88 81       	ld	r24, Y
 580:	c9 50       	subi	r28, 0x09	; 9
 582:	d2 40       	sbci	r29, 0x02	; 2
 584:	88 30       	cpi	r24, 0x08	; 8
 586:	14 f1       	brlt	.+68     	; 0x5cc <__EEPROM_REGION_LENGTH__+0x1cc>
						
						byteBuffer2 = sendData[sendDataLength - remainingSendPackets];
 588:	ca 5f       	subi	r28, 0xFA	; 250
 58a:	dd 4f       	sbci	r29, 0xFD	; 253
 58c:	e8 81       	ld	r30, Y
 58e:	c6 50       	subi	r28, 0x06	; 6
 590:	d2 40       	sbci	r29, 0x02	; 2
 592:	c9 5f       	subi	r28, 0xF9	; 249
 594:	dd 4f       	sbci	r29, 0xFD	; 253
 596:	88 81       	ld	r24, Y
 598:	c7 50       	subi	r28, 0x07	; 7
 59a:	d2 40       	sbci	r29, 0x02	; 2
 59c:	0e 2e       	mov	r0, r30
 59e:	00 0c       	add	r0, r0
 5a0:	ff 0b       	sbc	r31, r31
 5a2:	e8 1b       	sub	r30, r24
 5a4:	f1 09       	sbc	r31, r1
 5a6:	87 fd       	sbrc	r24, 7
 5a8:	f3 95       	inc	r31
 5aa:	67 e0       	ldi	r22, 0x07	; 7
 5ac:	71 e0       	ldi	r23, 0x01	; 1
 5ae:	6c 0f       	add	r22, r28
 5b0:	7d 1f       	adc	r23, r29
 5b2:	e6 0f       	add	r30, r22
 5b4:	f7 1f       	adc	r31, r23
 5b6:	80 81       	ld	r24, Z
 5b8:	c8 5f       	subi	r28, 0xF8	; 248
 5ba:	dd 4f       	sbci	r29, 0xFD	; 253
 5bc:	88 83       	st	Y, r24
 5be:	c8 50       	subi	r28, 0x08	; 8
 5c0:	d2 40       	sbci	r29, 0x02	; 2
						byteBufferPointer2 = 0;
 5c2:	c7 5f       	subi	r28, 0xF7	; 247
 5c4:	dd 4f       	sbci	r29, 0xFD	; 253
 5c6:	18 82       	st	Y, r1
 5c8:	c9 50       	subi	r28, 0x09	; 9
 5ca:	d2 40       	sbci	r29, 0x02	; 2
						
					}
					
					bool sendBit1 = (byteBuffer2 & (1 << (byteBufferPointer2 + 0)));
 5cc:	c8 5f       	subi	r28, 0xF8	; 248
 5ce:	dd 4f       	sbci	r29, 0xFD	; 253
 5d0:	88 81       	ld	r24, Y
 5d2:	c8 50       	subi	r28, 0x08	; 8
 5d4:	d2 40       	sbci	r29, 0x02	; 2
 5d6:	08 2e       	mov	r0, r24
 5d8:	00 0c       	add	r0, r0
 5da:	99 0b       	sbc	r25, r25
 5dc:	c7 5f       	subi	r28, 0xF7	; 247
 5de:	dd 4f       	sbci	r29, 0xFD	; 253
 5e0:	48 81       	ld	r20, Y
 5e2:	c9 50       	subi	r28, 0x09	; 9
 5e4:	d2 40       	sbci	r29, 0x02	; 2
 5e6:	24 2f       	mov	r18, r20
 5e8:	04 2e       	mov	r0, r20
 5ea:	00 0c       	add	r0, r0
 5ec:	33 0b       	sbc	r19, r19
 5ee:	dc 01       	movw	r26, r24
 5f0:	02 c0       	rjmp	.+4      	; 0x5f6 <__EEPROM_REGION_LENGTH__+0x1f6>
 5f2:	b5 95       	asr	r27
 5f4:	a7 95       	ror	r26
 5f6:	4a 95       	dec	r20
 5f8:	e2 f7       	brpl	.-8      	; 0x5f2 <__EEPROM_REGION_LENGTH__+0x1f2>
					bool sendBit2 = (byteBuffer2 & (1 << (byteBufferPointer2 + 1)));
 5fa:	2f 5f       	subi	r18, 0xFF	; 255
 5fc:	3f 4f       	sbci	r19, 0xFF	; 255
 5fe:	02 c0       	rjmp	.+4      	; 0x604 <__EEPROM_REGION_LENGTH__+0x204>
 600:	95 95       	asr	r25
 602:	87 95       	ror	r24
 604:	2a 95       	dec	r18
 606:	e2 f7       	brpl	.-8      	; 0x600 <__EEPROM_REGION_LENGTH__+0x200>
 608:	81 70       	andi	r24, 0x01	; 1
 60a:	99 27       	eor	r25, r25
					PORTC = (PORTC & ~PORTC_COM_1) | (sendBit1 ? PORTC_COM_1 : 0);
 60c:	28 b1       	in	r18, 0x08	; 8
 60e:	2e 7f       	andi	r18, 0xFE	; 254
 610:	a0 ff       	sbrs	r26, 0
 612:	02 c0       	rjmp	.+4      	; 0x618 <__EEPROM_REGION_LENGTH__+0x218>
 614:	31 e0       	ldi	r19, 0x01	; 1
 616:	01 c0       	rjmp	.+2      	; 0x61a <__EEPROM_REGION_LENGTH__+0x21a>
 618:	30 e0       	ldi	r19, 0x00	; 0
 61a:	23 2b       	or	r18, r19
 61c:	28 b9       	out	0x08, r18	; 8
					PORTC = (PORTC & ~PORTC_COM_2) | (sendBit2 ? PORTC_COM_2 : 0);
 61e:	28 b1       	in	r18, 0x08	; 8
 620:	2d 7f       	andi	r18, 0xFD	; 253
 622:	89 2b       	or	r24, r25
 624:	11 f0       	breq	.+4      	; 0x62a <__EEPROM_REGION_LENGTH__+0x22a>
 626:	92 e0       	ldi	r25, 0x02	; 2
 628:	01 c0       	rjmp	.+2      	; 0x62c <__EEPROM_REGION_LENGTH__+0x22c>
 62a:	90 e0       	ldi	r25, 0x00	; 0
 62c:	82 2f       	mov	r24, r18
 62e:	89 2b       	or	r24, r25
 630:	88 b9       	out	0x08, r24	; 8
					byteBufferPointer2 += 2;
 632:	c7 5f       	subi	r28, 0xF7	; 247
 634:	dd 4f       	sbci	r29, 0xFD	; 253
 636:	88 81       	ld	r24, Y
 638:	c9 50       	subi	r28, 0x09	; 9
 63a:	d2 40       	sbci	r29, 0x02	; 2
 63c:	8e 5f       	subi	r24, 0xFE	; 254
 63e:	c7 5f       	subi	r28, 0xF7	; 247
 640:	dd 4f       	sbci	r29, 0xFD	; 253
 642:	88 83       	st	Y, r24
 644:	c9 50       	subi	r28, 0x09	; 9
 646:	d2 40       	sbci	r29, 0x02	; 2
							
					if (byteBufferPointer2 >= 8) remainingSendPackets--;
 648:	88 30       	cpi	r24, 0x08	; 8
 64a:	5c f0       	brlt	.+22     	; 0x662 <__EEPROM_REGION_LENGTH__+0x262>
 64c:	c9 5f       	subi	r28, 0xF9	; 249
 64e:	dd 4f       	sbci	r29, 0xFD	; 253
 650:	88 81       	ld	r24, Y
 652:	c7 50       	subi	r28, 0x07	; 7
 654:	d2 40       	sbci	r29, 0x02	; 2
 656:	81 50       	subi	r24, 0x01	; 1
 658:	c9 5f       	subi	r28, 0xF9	; 249
 65a:	dd 4f       	sbci	r29, 0xFD	; 253
 65c:	88 83       	st	Y, r24
 65e:	c7 50       	subi	r28, 0x07	; 7
 660:	d2 40       	sbci	r29, 0x02	; 2
					
					if (remainingSendPackets < 0) {
 662:	c9 5f       	subi	r28, 0xF9	; 249
 664:	dd 4f       	sbci	r29, 0xFD	; 253
 666:	88 81       	ld	r24, Y
 668:	c7 50       	subi	r28, 0x07	; 7
 66a:	d2 40       	sbci	r29, 0x02	; 2
 66c:	88 23       	and	r24, r24
 66e:	0c f0       	brlt	.+2      	; 0x672 <__EEPROM_REGION_LENGTH__+0x272>
 670:	5f cd       	rjmp	.-1346   	; 0x130 <_ZN6System5startEv+0xb0>
						
						doSend = false;
 672:	ca 5f       	subi	r28, 0xFA	; 250
 674:	de 4f       	sbci	r29, 0xFE	; 254
 676:	18 82       	st	Y, r1
 678:	c6 50       	subi	r28, 0x06	; 6
 67a:	d1 40       	sbci	r29, 0x01	; 1
						sendDataLength = 0;
 67c:	ca 5f       	subi	r28, 0xFA	; 250
 67e:	dd 4f       	sbci	r29, 0xFD	; 253
 680:	18 82       	st	Y, r1
 682:	c6 50       	subi	r28, 0x06	; 6
 684:	d2 40       	sbci	r29, 0x02	; 2
 686:	54 cd       	rjmp	.-1368   	; 0x130 <_ZN6System5startEv+0xb0>
						
					}
					
				}
				
			} else if (hasHandledClckPulse && !clckHigh) {
 688:	c6 5f       	subi	r28, 0xF6	; 246
 68a:	dd 4f       	sbci	r29, 0xFD	; 253
 68c:	28 81       	ld	r18, Y
 68e:	ca 50       	subi	r28, 0x0A	; 10
 690:	d2 40       	sbci	r29, 0x02	; 2
 692:	22 23       	and	r18, r18
 694:	09 f4       	brne	.+2      	; 0x698 <__EEPROM_REGION_LENGTH__+0x298>
 696:	4c cd       	rjmp	.-1384   	; 0x130 <_ZN6System5startEv+0xb0>
 698:	18 16       	cp	r1, r24
 69a:	19 06       	cpc	r1, r25
 69c:	0c f4       	brge	.+2      	; 0x6a0 <__EEPROM_REGION_LENGTH__+0x2a0>
 69e:	48 cd       	rjmp	.-1392   	; 0x130 <_ZN6System5startEv+0xb0>
				
				// Start sending wehen reading complete
				if (requestSend && !doRead) {
 6a0:	cb 5f       	subi	r28, 0xFB	; 251
 6a2:	de 4f       	sbci	r29, 0xFE	; 254
 6a4:	88 81       	ld	r24, Y
 6a6:	c5 50       	subi	r28, 0x05	; 5
 6a8:	d1 40       	sbci	r29, 0x01	; 1
 6aa:	88 23       	and	r24, r24
 6ac:	71 f0       	breq	.+28     	; 0x6ca <__EEPROM_REGION_LENGTH__+0x2ca>
 6ae:	89 81       	ldd	r24, Y+1	; 0x01
 6b0:	81 11       	cpse	r24, r1
 6b2:	0b c0       	rjmp	.+22     	; 0x6ca <__EEPROM_REGION_LENGTH__+0x2ca>
					doSend = true;
 6b4:	81 e0       	ldi	r24, 0x01	; 1
 6b6:	ca 5f       	subi	r28, 0xFA	; 250
 6b8:	de 4f       	sbci	r29, 0xFE	; 254
 6ba:	88 83       	st	Y, r24
 6bc:	c6 50       	subi	r28, 0x06	; 6
 6be:	d1 40       	sbci	r29, 0x01	; 1
					requestSend = false;
 6c0:	cb 5f       	subi	r28, 0xFB	; 251
 6c2:	de 4f       	sbci	r29, 0xFE	; 254
 6c4:	18 82       	st	Y, r1
 6c6:	c5 50       	subi	r28, 0x05	; 5
 6c8:	d1 40       	sbci	r29, 0x01	; 1
				}
				
				hasHandledClckPulse = false;
 6ca:	c6 5f       	subi	r28, 0xF6	; 246
 6cc:	dd 4f       	sbci	r29, 0xFD	; 253
 6ce:	18 82       	st	Y, r1
 6d0:	ca 50       	subi	r28, 0x0A	; 10
 6d2:	d2 40       	sbci	r29, 0x02	; 2
 6d4:	2d cd       	rjmp	.-1446   	; 0x130 <_ZN6System5startEv+0xb0>

000006d6 <main>:
 */ 

#include "system.cpp"

int main(void)
{
 6d6:	cf 93       	push	r28
 6d8:	df 93       	push	r29
 6da:	00 d0       	rcall	.+0      	; 0x6dc <main+0x6>
 6dc:	1f 92       	push	r1
 6de:	cd b7       	in	r28, 0x3d	; 61
 6e0:	de b7       	in	r29, 0x3e	; 62
	
	System sys;
 6e2:	81 e0       	ldi	r24, 0x01	; 1
 6e4:	89 83       	std	Y+1, r24	; 0x01
 6e6:	1b 82       	std	Y+3, r1	; 0x03
 6e8:	1a 82       	std	Y+2, r1	; 0x02
	sys.start();
 6ea:	ce 01       	movw	r24, r28
 6ec:	01 96       	adiw	r24, 0x01	; 1
 6ee:	0e 94 40 00 	call	0x80	; 0x80 <_ZN6System5startEv>

000006f2 <eeprom_read_byte>:
 6f2:	f9 99       	sbic	0x1f, 1	; 31
 6f4:	fe cf       	rjmp	.-4      	; 0x6f2 <eeprom_read_byte>
 6f6:	92 bd       	out	0x22, r25	; 34
 6f8:	81 bd       	out	0x21, r24	; 33
 6fa:	f8 9a       	sbi	0x1f, 0	; 31
 6fc:	99 27       	eor	r25, r25
 6fe:	80 b5       	in	r24, 0x20	; 32
 700:	08 95       	ret

00000702 <eeprom_update_byte>:
 702:	26 2f       	mov	r18, r22

00000704 <eeprom_update_r18>:
 704:	f9 99       	sbic	0x1f, 1	; 31
 706:	fe cf       	rjmp	.-4      	; 0x704 <eeprom_update_r18>
 708:	92 bd       	out	0x22, r25	; 34
 70a:	81 bd       	out	0x21, r24	; 33
 70c:	f8 9a       	sbi	0x1f, 0	; 31
 70e:	01 97       	sbiw	r24, 0x01	; 1
 710:	00 b4       	in	r0, 0x20	; 32
 712:	02 16       	cp	r0, r18
 714:	39 f0       	breq	.+14     	; 0x724 <eeprom_update_r18+0x20>
 716:	1f ba       	out	0x1f, r1	; 31
 718:	20 bd       	out	0x20, r18	; 32
 71a:	0f b6       	in	r0, 0x3f	; 63
 71c:	f8 94       	cli
 71e:	fa 9a       	sbi	0x1f, 2	; 31
 720:	f9 9a       	sbi	0x1f, 1	; 31
 722:	0f be       	out	0x3f, r0	; 63
 724:	08 95       	ret

00000726 <_exit>:
 726:	f8 94       	cli

00000728 <__stop_program>:
 728:	ff cf       	rjmp	.-2      	; 0x728 <__stop_program>
